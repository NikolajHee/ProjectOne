#Project 1: Bakterie-Dataanalyse


#imports
import numpy as np
import warnings
import matplotlib.pyplot as plt
import time

#Gustav ..
def dataLoad(filename):
    """
    Parameters
    ---------
    filename: Name of file containing Nx3-matrix 

    Returns
    -------
    Nx3-Matrix but filtered (compromised rows are excluded)
    """
    file=open(filename,"r")
    #An array with the txt file's lines
    aMatrix=np.array(file.read().splitlines())
    # Arrays with zeros based on the number of lines in the file
    temp=np.zeros(len(aMatrix))
    growth=np.zeros(len(aMatrix))
    bacteria=np.zeros(len(aMatrix))

    #Converts all the strings to floats
    for i in range(len(aMatrix)):
        A=list(map(float,aMatrix[i].split()))
        B=np.array(A)
        if (10<=B[0]<=60) & (B[1]>0) & (B[2]==1 or B[2]==2 or B[2]==3 or B[2]==4):
            temp[i]=B[0]
            growth[i]=B[1]
            bacteria[i]=B[2]
        elif 10>B[0] or B[0]>60:
            print("Error line", i+1,"\n--> The temperature isn't between 10 and 60!")
        elif B[1]<=0:
            print("Error line", i+1,"\n--> The growth rate isn't above zero!")
        else:
            print("Error line", i+1,"\n--> The chosen type of bacteria doesn't work!")
     
 
    #sætter de tre arrays sammen, men får at få dem som kolonner transponeres matrixen
    bmatrix=np.vstack((temp,growth,bacteria)).T
    #Danner en ny matrix med alle rækkerne, som ikke er nuller
    data= bmatrix[np.all(bmatrix != 0,axis=1)]

    return data


#s214644; Nikolaj Hertz
from dataStatistics import *
#Benjamin
from dataPlot import *


#Vi var alle med til main-script
#Initial Statements:
quit = False   #loopet kører indtil quit = True
filter = False #flere ting i løbet af scriptet afhænger af hvorledes filteret er aktivt.
dataL = False  #Fortæller hvorledes om man har loadet data endnu
filterN = 2

bacteriaTypes = np.array(["salonella enterica","bascillus cereus",
                        "listeria","brochothrix thermosphacta"])


#Program loop:
while not quit:
    print(" 1. Load data.\n",
           "2. Filter data.")
    if filter:
        print(" (Filter is active)")

    print(" 3. Display statistics.\n"
           " 4. Generate plots.\n",
           "5. Quit.\n",
           "Choose: ")
    nInput = input()
    
    #Sikkerhed for input:
    try:
        number = int(nInput)
    except ValueError:
        number = 0

    if number == 1:
        #dataLoad
        print("What is the filename: ")
        filename = input()

        #Sikkerhed for input:
        try:
            finalData = data = dataLoad(filename)
            print("Data is loaded.")
            dataL = True
            rows, col = np.shape(data)
            time.sleep(3)
        except FileNotFoundError:
            print("File not found!")
            time.sleep(1.5)

    elif (number == 2) and (dataL):
        #Filter
        print(' 1. Filter for Bacteria type.\n',
               '2. A range filter for Growth Rate.')
        if filter:
            print(' 3. Disable Filter')
           
        print('Choose: ')
        filterInput = input()
        #Sikkerhed for input:
        try:
            filterNumber = int(filterInput)
        except ValueError:
            filterNumber = 0

        
        if filterNumber == 1:
            print("Limiting data to one bacteria-type. Type which.\n",":")
            bacteriaInput = input() 

            bacNumb = np.arange(1,5)[bacteriaInput.lower() == bacteriaTypes]

            if (bacteriaInput.lower() == bacteriaTypes).any():
                finalData = np.delete(data,(np.arange(0,rows)[data[:,2]!=bacNumb]),0)
                print("Data is filtered. ")
                filter = True
                filterN = 3
                time.sleep(1)
            else:
                print("Your input didn't match any bacteria.")
                time.sleep(1.5)
        
        
        elif (filterNumber == 2):
            print("Filter fo growth rate from: ")
            fromFilter = input()
            #Sikkerhed
            print("to:")
            toFilter = input()
            #Sikkerhed
            finalData = np.delete(np.delete(data,(np.arange(0,rows)[data[:,1]>float(toFilter)]),0),(np.arange(0,rows)[data[:,1]<float(fromFilter)]),0)
            print("Data is filtered.")
            filter = True
            filterN = 3
            time.sleep(1)
        elif (filterNumber == 3) and (filter):
            finalData = data
            filter = False
            filterN = 2
            print("Filter is removed.")
            time.sleep(1)
        else:
            print("Wrong input. You must type a number between 1 and {}!".format(round(filterN)))
            time.sleep(1.5)


    elif (number == 3) and (dataL):
        #Display Statistics
        print("What statistic do you want: ")
        statistic = input()
        #Sikkerhed for input
        try:
            output = dataStatistics(finalData, statistic)
            print(statistic[0].upper()+statistic[1:].lower(),":",output)
            time.sleep(2)
        except NameError:
            print("You have not loaded any data yet!")
            time.sleep(1)

    elif (number == 4) and (dataL):
        #Generate plots
        try:
            dataPlot(finalData)
        except NameError:
            print("You have not loaded any data yet!")
            time.sleep(1)


    elif number == 5:
        #Qut
        quit = True
    elif (not dataL) and (number<=5) and (number>=1):
        print("Error. You have not loaded any data!")
        time.sleep(1)
    else:
        print("Error. Your input wasn't a whole number between 1 and 5!")
        time.sleep(1)
