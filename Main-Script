#Project 1: Bakterie-Dataanalyse


#Imports:
import numpy as np

def dataLoad(filename):

    return data

#s214644
def dataStatistics(data, statistic):
    """
    Parameters
    ----------
    data: Nx3 matrix with colums temperature, groth rate and bacteria.
    statistic: required statistical scalar.

    Returns
    -------
    Scalar, the result of the statistical measurement.  
    """
    temp = data[:,0]
    growth_Rate = data[:,1]
    bacteria = data[:,2]

    rows, col = np.shape(data) 

    statStr = np.array(["Mean Temperature", "Mean Growth Rate", "Std Temperature", "Std Growth Rate",
                    "Rows", "Mean Cold Growth Rate", "Mean Hot Growth Rate"])

    statFlo = np.array([np.mean(temp), np.mean(growth_Rate), np.std(temp), np.std(growth_Rate),
                    rows, np.mean(temp[temp<20]), np.mean(temp[temp>50])])

    #array med den efterspurgte statistiske værdi
    expectedStat = ((statStr==statistic)*statFlo)

    try:
        result = expectedStat[expectedStat!=0][0]
    except IndexError:
        result = 0.0
    finally:
        return result


#Data Plot Function Benjamin Bjørn
#	Grafer

def dataPlot(data):
    return




quit = False
filter = False

#Program loop
while not quit:
    print(" 1. Load data.\n",
           "2. Filter data.\n",
           "3. Display statistics.\n",
           "4. Generate plots.\n",
           "5. Quit.\n",
           "Choose: ")
    nInput = input()

    try:
        number = int(nInput)
    except ValueError:
        print("Wrong input")
    if number == 1:
        #dataLoad
        print("What is the filename: ")
        file = input()
        dataLoad(file)
    if number == 2:
        #Filter
        print('sometginig')
    if number == 3:
        #Display Statistics
        print("What statistic do you want: ")
        statistic = input()
        dataStatistics(data, statistic)
    if number == 4:
        #Generate plots
        dataLoad(data)
    if number == 5:
        #Qut
        quit = True



